apply plugin: 'com.android.model.application'

def demoAppDir = "../../../../../../GearVRf-Tests/asset-tests/"

model {
    android {
        buildTypes {
            release {
                minifyEnabled false
            }
        }

        compileSdkVersion 23
        buildToolsVersion '24.0.3'

        defaultConfig {
            minSdkVersion.apiLevel 19
            targetSdkVersion.apiLevel 23
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            externalNativeBuild {
                cmake {
                    arguments.add('-DINCLUDE_DIR='+rootProject.projectDir.absolutePath+'/../../Framework/')
                    arguments.add('-DPATH_TO_LIBGVRF='+projectDir.absolutePath+'/build/intermediates/exploded-aar/Framework/framework/unspecified/jni/')
                    //difference in sign extension when reinterpret_cast-ing a pointer between
                    //gcc and clang hence overriding the default toolchain to match the one used
                    //by the other modules
                    arguments.add('-DANDROID_TOOLCHAIN=gcc')
                }
            }
        }

        ndk {
            abiFilters.add('armeabi-v7a')
        }

        sources {
            main {
                res {
                    source {
                        srcDirs = [demoAppDir+"app/src/main/res"]
                    }
                }
                manifest {
                    source {
                        srcDirs = [demoAppDir + "app/src/main/"]
                        include 'AndroidManifest.xml'
                    }
                }
                assets {
                    source {
                        srcDirs = [demoAppDir+"app/src/main/assets"]
                    }
                }
                jni {
                    source {
                        srcDirs = [demoAppDir+"app/src/main/jni"]
                    }
                }
            }
            androidTest {
                java {
                    source {
                        srcDirs = [demoAppDir+"app/src/androidTest/java"]
                    }
                }
                res {
                    source {
                        srcDirs = [demoAppDir+"app/src/main/res"]
                    }
                }
                assets {
                    source {
                        srcDirs = [demoAppDir+"app/src/main/assets"]
                    }
                }
                jni {
                    source {
                        srcDirs = [demoAppDir+"app/src/main/jni"]
                    }
                }
            }
        }
        externalNativeBuild {
            cmake {
                path demoAppDir+'app/src/main/cpp/CMakeLists.txt'
            }
        }
    }
}

task(copyOculusSignatures, type: Copy) {
    dependsOn assemble
    if (rootProject.hasProperty("OCULUS_SIGS_DIRECTORY")) {
        copy {
            from rootProject.property("OCULUS_SIGS_DIRECTORY")
            into demoAppDir + "app/src/main/assets"
            include 'oculussig_*'
        }
    }
}


dependencies {
    compile project(':framework')
    compile project(':backend_oculus')
    compile project(':gvr-unittestutils')
    androidTestCompile 'com.android.support:support-annotations:23.0.1'
    androidTestCompile 'com.android.support.test:runner:0.5+'
    androidTestCompile 'com.android.support.test:rules:0.5+'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2+'
    compile 'net.jodah:concurrentunit:0.4.2'
    compile 'com.android.support.test:rules:0.5+'
}